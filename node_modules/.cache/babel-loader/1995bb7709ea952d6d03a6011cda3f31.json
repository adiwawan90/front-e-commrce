{"ast":null,"code":"import _defineProperty from \"/home/adi/Documents/zalora/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/adi/Documents/zalora/src/Context.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport { storeProducts, detailProduct } from './data';\nconst ProductContext = React.createContext();\n\nclass ProductProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      // produk: storeProducts, // jika produk lgsung di inisiasi maka nilai dalam data tdk akan bisa terubah,\n      //makanya produk akan kina inisiasi dgn Arra kosong dahulu\n      produk: [],\n      detailProduk: detailProduct\n    };\n\n    this.setProduk = () => {\n      let tempProduk = [];\n      storeProducts.forEach(item => {\n        const singleItem = _objectSpread({}, item);\n\n        tempProduk = _objectSpread({}, tempProduk, {\n          singleItem\n        });\n      });\n    };\n\n    this.handleDetail = () => {\n      console.log('Berhasil Detail');\n    };\n\n    this.addToChart = () => {\n      console.log('ke Cart');\n    };\n  }\n\n  //ini fungsi setelah semua component di render oleh browser\n  componentDidMount() {\n    this.setProduk();\n  } //membuat fungsi utk men-set isi Produk\n\n\n  render() {\n    return React.createElement(ProductContext.Provider, {\n      value: _objectSpread({}, this.state, {\n        handleDetail: this.handleDetail,\n        addToChart: this.addToChart\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, this.props.children);\n  }\n\n}\n\nconst ProductConsumer = ProductContext.Consumer;\nexport { ProductProvider, ProductConsumer };","map":{"version":3,"sources":["/home/adi/Documents/zalora/src/Context.js"],"names":["React","Component","storeProducts","detailProduct","ProductContext","createContext","ProductProvider","state","produk","detailProduk","setProduk","tempProduk","forEach","item","singleItem","handleDetail","console","log","addToChart","componentDidMount","render","props","children","ProductConsumer","Consumer"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,aAAR,EAAuBC,aAAvB,QAA2C,QAA3C;AAGA,MAAMC,cAAc,GAAGJ,KAAK,CAACK,aAAN,EAAvB;;AAEA,MAAMC,eAAN,SAA8BL,SAA9B,CAAwC;AAAA;AAAA;AAAA,SAEpCM,KAFoC,GAE9B;AACF;AACA;AACAC,MAAAA,MAAM,EAAE,EAHN;AAIFC,MAAAA,YAAY,EAAEN;AAJZ,KAF8B;;AAAA,SAepCO,SAfoC,GAezB,MAAI;AACX,UAAIC,UAAU,GAAE,EAAhB;AACAT,MAAAA,aAAa,CAACU,OAAd,CAAsBC,IAAI,IAAG;AACzB,cAAMC,UAAU,qBAAOD,IAAP,CAAhB;;AACAF,QAAAA,UAAU,qBAAOA,UAAP;AAAmBG,UAAAA;AAAnB,UAAV;AACH,OAHD;AAIH,KArBmC;;AAAA,SAwBpCC,YAxBoC,GAwBtB,MAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACH,KA1BmC;;AAAA,SA2BpCC,UA3BoC,GA2BxB,MAAI;AACZF,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACH,KA7BmC;AAAA;;AASpC;AACAE,EAAAA,iBAAiB,GAAE;AACf,SAAKT,SAAL;AACH,GAZmC,CAcpC;;;AAgBAU,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,cAAD,CAAgB,QAAhB;AAAyB,MAAA,KAAK,oBAAM,KAAKb,KAAX;AAAkBQ,QAAAA,YAAY,EAAC,KAAKA,YAApC;AAAkDG,QAAAA,UAAU,EAAC,KAAKA;AAAlE,QAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKG,KAAL,CAAWC,QADhB,CADJ;AAKH;;AApCmC;;AAuCxC,MAAMC,eAAe,GAAGnB,cAAc,CAACoB,QAAvC;AAEA,SAAQlB,eAAR,EAAyBiB,eAAzB","sourcesContent":["import React, { Component } from 'react'\nimport {storeProducts, detailProduct} from './data'\n\n\nconst ProductContext = React.createContext()\n\nclass ProductProvider extends Component {\n    //untuk menampung produk & detail\n    state={\n        // produk: storeProducts, // jika produk lgsung di inisiasi maka nilai dalam data tdk akan bisa terubah,\n        //makanya produk akan kina inisiasi dgn Arra kosong dahulu\n        produk: [],\n        detailProduk: detailProduct\n    }\n\n    //ini fungsi setelah semua component di render oleh browser\n    componentDidMount(){\n        this.setProduk()\n    }\n\n    //membuat fungsi utk men-set isi Produk\n    setProduk =()=>{\n        let tempProduk= []\n        storeProducts.forEach(item =>{\n            const singleItem = {...item}\n            tempProduk = {...tempProduk, singleItem}\n        })\n    }\n\n    //mengecek berhasil apa tidak saat di klik\n    handleDetail =()=>{\n        console.log('Berhasil Detail')\n    }\n    addToChart =()=>{\n        console.log('ke Cart')\n    }\n    render() {\n        return (\n            <ProductContext.Provider value={{...this.state, handleDetail:this.handleDetail, addToChart:this.addToChart}}>\n                {this.props.children}\n            </ProductContext.Provider>\n        )\n    }\n}\n\nconst ProductConsumer = ProductContext.Consumer\n\nexport {ProductProvider, ProductConsumer}"]},"metadata":{},"sourceType":"module"}